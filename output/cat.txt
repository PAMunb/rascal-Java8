home/input.csv
INFO:root:  RJTL: Loading and start rejuvenation process...
Version: 0.28.2
INFO: detected |lib://rascal| at |jar+file:///home/rascal-Java8/rascal-shell-stable.jar!/|
INFO: resolved |lib://rascal| at |jar+file:///home/rascal-Java8/rascal-shell-stable.jar!/|
[Project Analyzer] project: cat
Creating log file at: /output/log-20230115000212
Processing cat...
|file:///home/dataset/cat/cat-core/src/main/java/com/dianping/cat/helper/MetricType.java|
Ambiguity(|unknown:///|(0,1695,<1,0>,<63,0>),"CompilationUnit","/*\n * Copyright (c) 2011-2018, Meituan Dianping. All Rights Reserved.\n *\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License. You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.dianping.cat.helper;\n\npublic enum MetricType {\n\tCOUNT(\"COUNT\", \"(次数)\"),\n\n\tAVG(\"AVG\", \"(平均)\"),\n\n\tSUM(\"SUM\", \"(总和)\");\n\n\tprivate String m_name;\n\n\tprivate String m_desc;\n\n\tMetricType(String name, String desc) {\n\t\tm_name = name;\n\t\tm_desc = desc;\n\t}\n\n\tpublic static MetricType getTypeByName(String name) {\n\t\tfor (MetricType type : MetricType.values()) {\n\t\t\tif (type.getName().equals(name)) {\n\t\t\t\treturn type;\n\t\t\t}\n\t\t}\n\t\tthrow new RuntimeException(\"Unsupported MetricType Name!\");\n\t}\n\n\tpublic static String getDesByName(String name) {\n\t\tfor (MetricType type : MetricType.values()) {\n\t\t\tif (type.getName().equals(name)) {\n\t\t\t\treturn type.getDesc();\n\t\t\t}\n\t\t}\n\t\tthrow new RuntimeException(\"Unsupported MetricType Name!\");\n\t}\n\n\tpublic String getName() {\n\t\treturn m_name;\n\t}\n\n\tpublic String getDesc() {\n\t\treturn m_desc;\n\t}\n};\n")
|file:///home/dataset/cat/integration/URL/CatFilter.java|
Ambiguity(|unknown:///|(1690,5865,<55,51>,<292,1>),"EnumBody","{\n\t\tENVIRONMENT {\n\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tboolean top = !Cat.getManager().hasContext();\n\n\t\t\t\tctx.setTop(top);\n\n\t\t\t\tif (top) {\n\t\t\t\t\tctx.setType(CatConstants.TYPE_URL);\n\n\t\t\t\t\tsetTraceMode(req);\n\t\t\t\t} else {\n\t\t\t\t\tctx.setType(CatConstants.TYPE_URL_FORWARD);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\n\t\t\tprotected void setTraceMode(HttpServletRequest req) {\n\t\t\t\tString traceMode = \"X-CAT-TRACE-MODE\";\n\t\t\t\tString headMode = req.getHeader(traceMode);\n\n\t\t\t\tif (\"true\".equals(headMode)) {\n\t\t\t\t\tCat.getManager().setTraceMode(true);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tID_SETUP {\n\t\t\tprivate String m_servers;\n\n\t\t\tprivate String getCatServer() {\n\t\t\t\tif (m_servers == null) {\n\t\t\t\t\tDefaultMessageManager manager = (DefaultMessageManager) Cat.getManager();\n\t\t\t\t\tList\<Server\> servers = manager.getConfigManager().getServers();\n\n\t\t\t\t\tm_servers = Joiners.by(\',\').join(servers, new IBuilder\<Server\>() {\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic String asString(Server server) {\n\t\t\t\t\t\t\tString ip = server.getIp();\n\t\t\t\t\t\t\tInteger httpPort = server.getHttpPort();\n\n\t\t\t\t\t\t\treturn ip + \":\" + httpPort;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn m_servers;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tboolean isTraceMode = Cat.getManager().isTraceMode();\n\t\t\t\tHttpServletResponse res = ctx.getResponse();\n\n\t\t\t\tif (isTraceMode) {\n\t\t\t\t\tString id = Cat.getCurrentMessageId();\n\n\t\t\t\t\tres.setHeader(\"X-CAT-ROOT-ID\", id);\n\t\t\t\t\tres.setHeader(\"X-CAT-SERVER\", getCatServer());\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\t\t},\n\n\t\tLOG_CLIENT_PAYLOAD {\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tString type = ctx.getType();\n\n\t\t\t\tif (ctx.isTop()) {\n\t\t\t\t\tlogRequestClientInfo(req, type);\n\t\t\t\t\tlogRequestPayload(req, type);\n\t\t\t\t} else {\n\t\t\t\t\tlogRequestPayload(req, type);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\n\t\t\tprotected void logRequestClientInfo(HttpServletRequest req, String type) {\n\t\t\t\tStringBuilder sb = new StringBuilder(1024);\n\t\t\t\tString ip = \"\";\n\t\t\t\tString ipForwarded = req.getHeader(\"x-forwarded-for\");\n\n\t\t\t\tif (ipForwarded == null) {\n\t\t\t\t\tip = req.getRemoteAddr();\n\t\t\t\t} else {\n\t\t\t\t\tip = ipForwarded;\n\t\t\t\t}\n\n\t\t\t\tsb.append(\"IPS=\").append(ip);\n\t\t\t\tsb.append(\"&VirtualIP=\").append(req.getRemoteAddr());\n\t\t\t\tsb.append(\"&Server=\").append(req.getServerName());\n\t\t\t\tsb.append(\"&Referer=\").append(req.getHeader(\"referer\"));\n\t\t\t\tsb.append(\"&Agent=\").append(req.getHeader(\"user-agent\"));\n\n\t\t\t\tCat.logEvent(type, type + \".Server\", Message.SUCCESS, sb.toString());\n\t\t\t}\n\n\t\t\tprotected void logRequestPayload(HttpServletRequest req, String type) {\n\t\t\t\tStringBuilder sb = new StringBuilder(256);\n\n\t\t\t\tsb.append(req.getScheme().toUpperCase()).append(\'/\');\n\t\t\t\tsb.append(req.getMethod()).append(\' \').append(req.getRequestURI());\n\n\t\t\t\tString qs = req.getQueryString();\n\n\t\t\t\tif (qs != null) {\n\t\t\t\t\tsb.append(\'?\').append(qs);\n\t\t\t\t}\n\n\t\t\t\tCat.logEvent(type, type + \".Method\", Message.SUCCESS, sb.toString());\n\t\t\t}\n\t\t},\n\n\t\tLOG_SPAN {\n\n\t\t\tpublic static final char SPLIT = \'/\';\n\n\t\t\tprivate void customizeStatus(Transaction t, HttpServletRequest req) {\n\t\t\t\tObject catStatus = req.getAttribute(CatConstants.CAT_STATE);\n\n\t\t\t\tif (catStatus != null) {\n\t\t\t\t\tt.setStatus(catStatus.toString());\n\t\t\t\t} else {\n\t\t\t\t\tt.setStatus(Message.SUCCESS);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate void customizeUri(Transaction t, HttpServletRequest req) {\n\t\t\t\tif (t instanceof DefaultTransaction) {\n\t\t\t\t\tObject catPageType = req.getAttribute(CatConstants.CAT_PAGE_TYPE);\n\n\t\t\t\t\tif (catPageType instanceof String) {\n\t\t\t\t\t\t((DefaultTransaction) t).setType(catPageType.toString());\n\t\t\t\t\t}\n\n\t\t\t\t\tObject catPageUri = req.getAttribute(CatConstants.CAT_PAGE_URI);\n\n\t\t\t\t\tif (catPageUri instanceof String) {\n\t\t\t\t\t\t((DefaultTransaction) t).setName(catPageUri.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate String getRequestURI(HttpServletRequest req) {\n\t\t\t\tString url = req.getRequestURI();\n\t\t\t\tint length = url.length();\n\t\t\t\tStringBuilder sb = new StringBuilder(length);\n\n\t\t\t\tfor (int index = 0; index \< length;) {\n\t\t\t\t\tchar c = url.charAt(index);\n\n\t\t\t\t\tif (c == SPLIT && index \< length - 1) {\n\t\t\t\t\t\tsb.append(c);\n\n\t\t\t\t\t\tStringBuilder nextSection = new StringBuilder();\n\t\t\t\t\t\tboolean isNumber = false;\n\t\t\t\t\t\tboolean first = true;\n\n\t\t\t\t\t\tfor (int j = index + 1; j \< length; j++) {\n\t\t\t\t\t\t\tchar next = url.charAt(j);\n\n\t\t\t\t\t\t\tif ((first || isNumber == true) && next != SPLIT) {\n\t\t\t\t\t\t\t\tisNumber = isNumber(next);\n\t\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (next == SPLIT) {\n\t\t\t\t\t\t\t\tif (isNumber) {\n\t\t\t\t\t\t\t\t\tsb.append(\"{num}\");\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsb.append(nextSection.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tindex = j;\n\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else if (j == length - 1) {\n\t\t\t\t\t\t\t\tif (isNumber) {\n\t\t\t\t\t\t\t\t\tsb.append(\"{num}\");\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnextSection.append(next);\n\t\t\t\t\t\t\t\t\tsb.append(nextSection.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tindex = j + 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnextSection.append(next);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsb.append(c);\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn sb.toString();\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tTransaction t = Cat.newTransaction(ctx.getType(), getRequestURI(req));\n\n\t\t\t\ttry {\n\t\t\t\t\tctx.handle();\n\t\t\t\t\tcustomizeStatus(t, req);\n\t\t\t\t} catch (ServletException e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t} catch (Throwable e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow new RuntimeException(e);\n\t\t\t\t} finally {\n\t\t\t\t\tcustomizeUri(t, req);\n\t\t\t\t\tt.complete();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate boolean isNumber(char c) {\n\t\t\t\treturn (c \>= \'0\' && c \<= \'9\') || c == \'.\' || c == \'-\' || c == \',\';\n\t\t\t}\n\t\t};\n\t}\n\n\t")
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/system/page/login/LoginAction.java|
Ambiguity(|unknown:///|,"ElementValueList?","")
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/problem/service/HistoricalProblemService.java|
Ambiguity(|unknown:///|,"BlockStatement+","long date = request.getStartTime();\n\t\tProblemReport report = getReportFromDatabase(date, domain);\n\t\t;")
|file:///home/dataset/cat/cat-client/src/main/java/com/dianping/cat/support/servlet/CatFilter.java|
Ambiguity(|unknown:///|(3048,4272,<91,51>,<257,1>),"EnumBody","{\n\t\tENVIRONMENT {\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tboolean top = !TraceContextHelper.threadLocal().hasPeekTransaction();\n\n\t\t\t\tctx.setTop(top);\n\n\t\t\t\tif (top) {\n\t\t\t\t\tctx.setType(CatClientConstants.TYPE_URL);\n\t\t\t\t} else {\n\t\t\t\t\tctx.setType(CatClientConstants.TYPE_URL_FORWARD);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\t\t},\n\n\t\tID_SETUP {\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tString id = req.getHeader(\"x-cat-id\");\n\t\t\t\tString parentId = req.getHeader(\"x-cat-parent-id\");\n\t\t\t\tString rootId = req.getHeader(\"x-cat-root-id\");\n\n\t\t\t\tif (id != null) {\n\t\t\t\t\tMessageTree tree = TraceContextHelper.threadLocal().getMessageTree();\n\n\t\t\t\t\ttree.setMessageId(id);\n\t\t\t\t\ttree.setParentMessageId(parentId);\n\t\t\t\t\ttree.setRootMessageId(rootId);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\t\t},\n\n\t\tLOG_CLIENT_PAYLOAD {\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tString type = ctx.getType();\n\n\t\t\t\tif (ctx.isTop()) {\n\t\t\t\t\tlogRequestClientInfo(req, type);\n\t\t\t\t\tlogRequestPayload(req, type);\n\t\t\t\t} else {\n\t\t\t\t\tlogRequestPayload(req, type);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\n\t\t\tprotected void logRequestClientInfo(HttpServletRequest req, String type) {\n\t\t\t\tStringBuilder sb = new StringBuilder(1024);\n\t\t\t\tString ip = \"\";\n\t\t\t\tString ipForwarded = req.getHeader(\"x-forwarded-for\");\n\n\t\t\t\tif (ipForwarded == null) {\n\t\t\t\t\tip = req.getRemoteAddr();\n\t\t\t\t} else {\n\t\t\t\t\tip = ipForwarded;\n\t\t\t\t}\n\n\t\t\t\tsb.append(\"IPS=\").append(ip);\n\t\t\t\tsb.append(\"&VirtualIP=\").append(req.getRemoteAddr());\n\t\t\t\tsb.append(\"&Server=\").append(req.getServerName());\n\t\t\t\tsb.append(\"&Referer=\").append(req.getHeader(\"referer\"));\n\t\t\t\tsb.append(\"&Agent=\").append(req.getHeader(\"user-agent\"));\n\n\t\t\t\tCat.logEvent(type, type + \".Server\", Message.SUCCESS, sb.toString());\n\t\t\t}\n\n\t\t\tprotected void logRequestPayload(HttpServletRequest req, String type) {\n\t\t\t\tStringBuilder sb = new StringBuilder(256);\n\n\t\t\t\tsb.append(req.getScheme().toUpperCase()).append(\'/\');\n\t\t\t\tsb.append(req.getMethod()).append(\' \').append(req.getRequestURI());\n\n\t\t\t\tString qs = req.getQueryString();\n\n\t\t\t\tif (qs != null) {\n\t\t\t\t\tsb.append(\'?\').append(qs);\n\t\t\t\t}\n\n\t\t\t\tCat.logEvent(type, type + \".Method\", Message.SUCCESS, sb.toString());\n\t\t\t}\n\t\t},\n\n\t\tLOG_SPAN {\n\t\t\tprivate void customizeStatus(Transaction t, HttpServletRequest req) {\n\t\t\t\tObject catStatus = req.getAttribute(CatClientConstants.CAT_STATE);\n\n\t\t\t\tif (catStatus != null) {\n\t\t\t\t\tt.setStatus(catStatus.toString());\n\t\t\t\t} else {\n\t\t\t\t\tt.setStatus(Message.SUCCESS);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate void customizeUri(Transaction t, HttpServletRequest req) {\n\t\t\t\tif (t instanceof DefaultTransaction) {\n\t\t\t\t\tObject catPageType = req.getAttribute(CatClientConstants.CAT_PAGE_TYPE);\n\n\t\t\t\t\tif (catPageType instanceof String) {\n\t\t\t\t\t\t((DefaultTransaction) t).setType(catPageType.toString());\n\t\t\t\t\t}\n\n\t\t\t\t\tObject catPageUri = req.getAttribute(CatClientConstants.CAT_PAGE_URI);\n\n\t\t\t\t\tif (catPageUri instanceof String) {\n\t\t\t\t\t\t((DefaultTransaction) t).setName(catPageUri.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate String getRequestURI(HttpServletRequest req) {\n\t\t\t\tString requestURI = req.getRequestURI();\n\n\t\t\t\tif (s_patterns.size() == 0) {\n\t\t\t\t\treturn requestURI;\n\t\t\t\t} else {\n\t\t\t\t\tfor (Entry\<MessageFormat, String\> entry : s_patterns.entrySet()) {\n\t\t\t\t\t\tMessageFormat format = entry.getKey();\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tformat.parse(requestURI);\n\n\t\t\t\t\t\t\treturn entry.getValue();\n\t\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn requestURI;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tTransaction t = Cat.newTransaction(ctx.getType(), getRequestURI(req));\n\n\t\t\t\ttry {\n\t\t\t\t\tctx.handle();\n\t\t\t\t\tcustomizeStatus(t, req);\n\t\t\t\t} catch (ServletException e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t} catch (Throwable e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow new RuntimeException(e);\n\t\t\t\t} finally {\n\t\t\t\t\tcustomizeUri(t, req);\n\t\t\t\t\tt.complete();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t")
0
[Project Analyzer] project: cat
Processing cat...
|file:///home/dataset/cat/cat-core/src/main/java/com/dianping/cat/helper/MetricType.java|
Ambiguity(|unknown:///|(0,1695,<1,0>,<63,0>),"CompilationUnit","/*\n * Copyright (c) 2011-2018, Meituan Dianping. All Rights Reserved.\n *\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License. You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.dianping.cat.helper;\n\npublic enum MetricType {\n\tCOUNT(\"COUNT\", \"(次数)\"),\n\n\tAVG(\"AVG\", \"(平均)\"),\n\n\tSUM(\"SUM\", \"(总和)\");\n\n\tprivate String m_name;\n\n\tprivate String m_desc;\n\n\tMetricType(String name, String desc) {\n\t\tm_name = name;\n\t\tm_desc = desc;\n\t}\n\n\tpublic static MetricType getTypeByName(String name) {\n\t\tfor (MetricType type : MetricType.values()) {\n\t\t\tif (type.getName().equals(name)) {\n\t\t\t\treturn type;\n\t\t\t}\n\t\t}\n\t\tthrow new RuntimeException(\"Unsupported MetricType Name!\");\n\t}\n\n\tpublic static String getDesByName(String name) {\n\t\tfor (MetricType type : MetricType.values()) {\n\t\t\tif (type.getName().equals(name)) {\n\t\t\t\treturn type.getDesc();\n\t\t\t}\n\t\t}\n\t\tthrow new RuntimeException(\"Unsupported MetricType Name!\");\n\t}\n\n\tpublic String getName() {\n\t\treturn m_name;\n\t}\n\n\tpublic String getDesc() {\n\t\treturn m_desc;\n\t}\n};\n")
|file:///home/dataset/cat/integration/URL/CatFilter.java|
Ambiguity(|unknown:///|(1690,5865,<55,51>,<292,1>),"EnumBody","{\n\t\tENVIRONMENT {\n\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tboolean top = !Cat.getManager().hasContext();\n\n\t\t\t\tctx.setTop(top);\n\n\t\t\t\tif (top) {\n\t\t\t\t\tctx.setType(CatConstants.TYPE_URL);\n\n\t\t\t\t\tsetTraceMode(req);\n\t\t\t\t} else {\n\t\t\t\t\tctx.setType(CatConstants.TYPE_URL_FORWARD);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\n\t\t\tprotected void setTraceMode(HttpServletRequest req) {\n\t\t\t\tString traceMode = \"X-CAT-TRACE-MODE\";\n\t\t\t\tString headMode = req.getHeader(traceMode);\n\n\t\t\t\tif (\"true\".equals(headMode)) {\n\t\t\t\t\tCat.getManager().setTraceMode(true);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tID_SETUP {\n\t\t\tprivate String m_servers;\n\n\t\t\tprivate String getCatServer() {\n\t\t\t\tif (m_servers == null) {\n\t\t\t\t\tDefaultMessageManager manager = (DefaultMessageManager) Cat.getManager();\n\t\t\t\t\tList\<Server\> servers = manager.getConfigManager().getServers();\n\n\t\t\t\t\tm_servers = Joiners.by(\',\').join(servers, new IBuilder\<Server\>() {\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic String asString(Server server) {\n\t\t\t\t\t\t\tString ip = server.getIp();\n\t\t\t\t\t\t\tInteger httpPort = server.getHttpPort();\n\n\t\t\t\t\t\t\treturn ip + \":\" + httpPort;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn m_servers;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tboolean isTraceMode = Cat.getManager().isTraceMode();\n\t\t\t\tHttpServletResponse res = ctx.getResponse();\n\n\t\t\t\tif (isTraceMode) {\n\t\t\t\t\tString id = Cat.getCurrentMessageId();\n\n\t\t\t\t\tres.setHeader(\"X-CAT-ROOT-ID\", id);\n\t\t\t\t\tres.setHeader(\"X-CAT-SERVER\", getCatServer());\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\t\t},\n\n\t\tLOG_CLIENT_PAYLOAD {\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tString type = ctx.getType();\n\n\t\t\t\tif (ctx.isTop()) {\n\t\t\t\t\tlogRequestClientInfo(req, type);\n\t\t\t\t\tlogRequestPayload(req, type);\n\t\t\t\t} else {\n\t\t\t\t\tlogRequestPayload(req, type);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\n\t\t\tprotected void logRequestClientInfo(HttpServletRequest req, String type) {\n\t\t\t\tStringBuilder sb = new StringBuilder(1024);\n\t\t\t\tString ip = \"\";\n\t\t\t\tString ipForwarded = req.getHeader(\"x-forwarded-for\");\n\n\t\t\t\tif (ipForwarded == null) {\n\t\t\t\t\tip = req.getRemoteAddr();\n\t\t\t\t} else {\n\t\t\t\t\tip = ipForwarded;\n\t\t\t\t}\n\n\t\t\t\tsb.append(\"IPS=\").append(ip);\n\t\t\t\tsb.append(\"&VirtualIP=\").append(req.getRemoteAddr());\n\t\t\t\tsb.append(\"&Server=\").append(req.getServerName());\n\t\t\t\tsb.append(\"&Referer=\").append(req.getHeader(\"referer\"));\n\t\t\t\tsb.append(\"&Agent=\").append(req.getHeader(\"user-agent\"));\n\n\t\t\t\tCat.logEvent(type, type + \".Server\", Message.SUCCESS, sb.toString());\n\t\t\t}\n\n\t\t\tprotected void logRequestPayload(HttpServletRequest req, String type) {\n\t\t\t\tStringBuilder sb = new StringBuilder(256);\n\n\t\t\t\tsb.append(req.getScheme().toUpperCase()).append(\'/\');\n\t\t\t\tsb.append(req.getMethod()).append(\' \').append(req.getRequestURI());\n\n\t\t\t\tString qs = req.getQueryString();\n\n\t\t\t\tif (qs != null) {\n\t\t\t\t\tsb.append(\'?\').append(qs);\n\t\t\t\t}\n\n\t\t\t\tCat.logEvent(type, type + \".Method\", Message.SUCCESS, sb.toString());\n\t\t\t}\n\t\t},\n\n\t\tLOG_SPAN {\n\n\t\t\tpublic static final char SPLIT = \'/\';\n\n\t\t\tprivate void customizeStatus(Transaction t, HttpServletRequest req) {\n\t\t\t\tObject catStatus = req.getAttribute(CatConstants.CAT_STATE);\n\n\t\t\t\tif (catStatus != null) {\n\t\t\t\t\tt.setStatus(catStatus.toString());\n\t\t\t\t} else {\n\t\t\t\t\tt.setStatus(Message.SUCCESS);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate void customizeUri(Transaction t, HttpServletRequest req) {\n\t\t\t\tif (t instanceof DefaultTransaction) {\n\t\t\t\t\tObject catPageType = req.getAttribute(CatConstants.CAT_PAGE_TYPE);\n\n\t\t\t\t\tif (catPageType instanceof String) {\n\t\t\t\t\t\t((DefaultTransaction) t).setType(catPageType.toString());\n\t\t\t\t\t}\n\n\t\t\t\t\tObject catPageUri = req.getAttribute(CatConstants.CAT_PAGE_URI);\n\n\t\t\t\t\tif (catPageUri instanceof String) {\n\t\t\t\t\t\t((DefaultTransaction) t).setName(catPageUri.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate String getRequestURI(HttpServletRequest req) {\n\t\t\t\tString url = req.getRequestURI();\n\t\t\t\tint length = url.length();\n\t\t\t\tStringBuilder sb = new StringBuilder(length);\n\n\t\t\t\tfor (int index = 0; index \< length;) {\n\t\t\t\t\tchar c = url.charAt(index);\n\n\t\t\t\t\tif (c == SPLIT && index \< length - 1) {\n\t\t\t\t\t\tsb.append(c);\n\n\t\t\t\t\t\tStringBuilder nextSection = new StringBuilder();\n\t\t\t\t\t\tboolean isNumber = false;\n\t\t\t\t\t\tboolean first = true;\n\n\t\t\t\t\t\tfor (int j = index + 1; j \< length; j++) {\n\t\t\t\t\t\t\tchar next = url.charAt(j);\n\n\t\t\t\t\t\t\tif ((first || isNumber == true) && next != SPLIT) {\n\t\t\t\t\t\t\t\tisNumber = isNumber(next);\n\t\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (next == SPLIT) {\n\t\t\t\t\t\t\t\tif (isNumber) {\n\t\t\t\t\t\t\t\t\tsb.append(\"{num}\");\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsb.append(nextSection.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tindex = j;\n\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else if (j == length - 1) {\n\t\t\t\t\t\t\t\tif (isNumber) {\n\t\t\t\t\t\t\t\t\tsb.append(\"{num}\");\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnextSection.append(next);\n\t\t\t\t\t\t\t\t\tsb.append(nextSection.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tindex = j + 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnextSection.append(next);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsb.append(c);\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn sb.toString();\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tTransaction t = Cat.newTransaction(ctx.getType(), getRequestURI(req));\n\n\t\t\t\ttry {\n\t\t\t\t\tctx.handle();\n\t\t\t\t\tcustomizeStatus(t, req);\n\t\t\t\t} catch (ServletException e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t} catch (Throwable e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow new RuntimeException(e);\n\t\t\t\t} finally {\n\t\t\t\t\tcustomizeUri(t, req);\n\t\t\t\t\tt.complete();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate boolean isNumber(char c) {\n\t\t\t\treturn (c \>= \'0\' && c \<= \'9\') || c == \'.\' || c == \'-\' || c == \',\';\n\t\t\t}\n\t\t};\n\t}\n\n\t")
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/system/page/login/LoginAction.java|
Ambiguity(|unknown:///|,"ElementValueList?","")
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/problem/service/HistoricalProblemService.java|
Ambiguity(|unknown:///|,"BlockStatement+","long date = request.getStartTime();\n\t\tProblemReport report = getReportFromDatabase(date, domain);\n\t\t;")
  893 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-client/src/main/java/com/dianping/cat/support/servlet/CatFilter.java|
Ambiguity(|unknown:///|(3048,4272,<91,51>,<257,1>),"EnumBody","{\n\t\tENVIRONMENT {\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tboolean top = !TraceContextHelper.threadLocal().hasPeekTransaction();\n\n\t\t\t\tctx.setTop(top);\n\n\t\t\t\tif (top) {\n\t\t\t\t\tctx.setType(CatClientConstants.TYPE_URL);\n\t\t\t\t} else {\n\t\t\t\t\tctx.setType(CatClientConstants.TYPE_URL_FORWARD);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\t\t},\n\n\t\tID_SETUP {\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tString id = req.getHeader(\"x-cat-id\");\n\t\t\t\tString parentId = req.getHeader(\"x-cat-parent-id\");\n\t\t\t\tString rootId = req.getHeader(\"x-cat-root-id\");\n\n\t\t\t\tif (id != null) {\n\t\t\t\t\tMessageTree tree = TraceContextHelper.threadLocal().getMessageTree();\n\n\t\t\t\t\ttree.setMessageId(id);\n\t\t\t\t\ttree.setParentMessageId(parentId);\n\t\t\t\t\ttree.setRootMessageId(rootId);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\t\t},\n\n\t\tLOG_CLIENT_PAYLOAD {\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tString type = ctx.getType();\n\n\t\t\t\tif (ctx.isTop()) {\n\t\t\t\t\tlogRequestClientInfo(req, type);\n\t\t\t\t\tlogRequestPayload(req, type);\n\t\t\t\t} else {\n\t\t\t\t\tlogRequestPayload(req, type);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\n\t\t\tprotected void logRequestClientInfo(HttpServletRequest req, String type) {\n\t\t\t\tStringBuilder sb = new StringBuilder(1024);\n\t\t\t\tString ip = \"\";\n\t\t\t\tString ipForwarded = req.getHeader(\"x-forwarded-for\");\n\n\t\t\t\tif (ipForwarded == null) {\n\t\t\t\t\tip = req.getRemoteAddr();\n\t\t\t\t} else {\n\t\t\t\t\tip = ipForwarded;\n\t\t\t\t}\n\n\t\t\t\tsb.append(\"IPS=\").append(ip);\n\t\t\t\tsb.append(\"&VirtualIP=\").append(req.getRemoteAddr());\n\t\t\t\tsb.append(\"&Server=\").append(req.getServerName());\n\t\t\t\tsb.append(\"&Referer=\").append(req.getHeader(\"referer\"));\n\t\t\t\tsb.append(\"&Agent=\").append(req.getHeader(\"user-agent\"));\n\n\t\t\t\tCat.logEvent(type, type + \".Server\", Message.SUCCESS, sb.toString());\n\t\t\t}\n\n\t\t\tprotected void logRequestPayload(HttpServletRequest req, String type) {\n\t\t\t\tStringBuilder sb = new StringBuilder(256);\n\n\t\t\t\tsb.append(req.getScheme().toUpperCase()).append(\'/\');\n\t\t\t\tsb.append(req.getMethod()).append(\' \').append(req.getRequestURI());\n\n\t\t\t\tString qs = req.getQueryString();\n\n\t\t\t\tif (qs != null) {\n\t\t\t\t\tsb.append(\'?\').append(qs);\n\t\t\t\t}\n\n\t\t\t\tCat.logEvent(type, type + \".Method\", Message.SUCCESS, sb.toString());\n\t\t\t}\n\t\t},\n\n\t\tLOG_SPAN {\n\t\t\tprivate void customizeStatus(Transaction t, HttpServletRequest req) {\n\t\t\t\tObject catStatus = req.getAttribute(CatClientConstants.CAT_STATE);\n\n\t\t\t\tif (catStatus != null) {\n\t\t\t\t\tt.setStatus(catStatus.toString());\n\t\t\t\t} else {\n\t\t\t\t\tt.setStatus(Message.SUCCESS);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate void customizeUri(Transaction t, HttpServletRequest req) {\n\t\t\t\tif (t instanceof DefaultTransaction) {\n\t\t\t\t\tObject catPageType = req.getAttribute(CatClientConstants.CAT_PAGE_TYPE);\n\n\t\t\t\t\tif (catPageType instanceof String) {\n\t\t\t\t\t\t((DefaultTransaction) t).setType(catPageType.toString());\n\t\t\t\t\t}\n\n\t\t\t\t\tObject catPageUri = req.getAttribute(CatClientConstants.CAT_PAGE_URI);\n\n\t\t\t\t\tif (catPageUri instanceof String) {\n\t\t\t\t\t\t((DefaultTransaction) t).setName(catPageUri.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate String getRequestURI(HttpServletRequest req) {\n\t\t\t\tString requestURI = req.getRequestURI();\n\n\t\t\t\tif (s_patterns.size() == 0) {\n\t\t\t\t\treturn requestURI;\n\t\t\t\t} else {\n\t\t\t\t\tfor (Entry\<MessageFormat, String\> entry : s_patterns.entrySet()) {\n\t\t\t\t\t\tMessageFormat format = entry.getKey();\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tformat.parse(requestURI);\n\n\t\t\t\t\t\t\treturn entry.getValue();\n\t\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn requestURI;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tTransaction t = Cat.newTransaction(ctx.getType(), getRequestURI(req));\n\n\t\t\t\ttry {\n\t\t\t\t\tctx.handle();\n\t\t\t\t\tcustomizeStatus(t, req);\n\t\t\t\t} catch (ServletException e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t} catch (Throwable e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow new RuntimeException(e);\n\t\t\t\t} finally {\n\t\t\t\t\tcustomizeUri(t, req);\n\t\t\t\t\tt.complete();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t")
1
[Project Analyzer] project: cat
Processing cat...
|file:///home/dataset/cat/cat-core/src/main/java/com/dianping/cat/helper/MetricType.java|
Ambiguity(|unknown:///|(0,1695,<1,0>,<63,0>),"CompilationUnit","/*\n * Copyright (c) 2011-2018, Meituan Dianping. All Rights Reserved.\n *\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License. You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.dianping.cat.helper;\n\npublic enum MetricType {\n\tCOUNT(\"COUNT\", \"(次数)\"),\n\n\tAVG(\"AVG\", \"(平均)\"),\n\n\tSUM(\"SUM\", \"(总和)\");\n\n\tprivate String m_name;\n\n\tprivate String m_desc;\n\n\tMetricType(String name, String desc) {\n\t\tm_name = name;\n\t\tm_desc = desc;\n\t}\n\n\tpublic static MetricType getTypeByName(String name) {\n\t\tfor (MetricType type : MetricType.values()) {\n\t\t\tif (type.getName().equals(name)) {\n\t\t\t\treturn type;\n\t\t\t}\n\t\t}\n\t\tthrow new RuntimeException(\"Unsupported MetricType Name!\");\n\t}\n\n\tpublic static String getDesByName(String name) {\n\t\tfor (MetricType type : MetricType.values()) {\n\t\t\tif (type.getName().equals(name)) {\n\t\t\t\treturn type.getDesc();\n\t\t\t}\n\t\t}\n\t\tthrow new RuntimeException(\"Unsupported MetricType Name!\");\n\t}\n\n\tpublic String getName() {\n\t\treturn m_name;\n\t}\n\n\tpublic String getDesc() {\n\t\treturn m_desc;\n\t}\n};\n")
  73 of 1359 processed succesfully!
  123 of 1359 processed succesfully!
|file:///home/dataset/cat/integration/URL/CatFilter.java|
Ambiguity(|unknown:///|(1690,5865,<55,51>,<292,1>),"EnumBody","{\n\t\tENVIRONMENT {\n\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tboolean top = !Cat.getManager().hasContext();\n\n\t\t\t\tctx.setTop(top);\n\n\t\t\t\tif (top) {\n\t\t\t\t\tctx.setType(CatConstants.TYPE_URL);\n\n\t\t\t\t\tsetTraceMode(req);\n\t\t\t\t} else {\n\t\t\t\t\tctx.setType(CatConstants.TYPE_URL_FORWARD);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\n\t\t\tprotected void setTraceMode(HttpServletRequest req) {\n\t\t\t\tString traceMode = \"X-CAT-TRACE-MODE\";\n\t\t\t\tString headMode = req.getHeader(traceMode);\n\n\t\t\t\tif (\"true\".equals(headMode)) {\n\t\t\t\t\tCat.getManager().setTraceMode(true);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tID_SETUP {\n\t\t\tprivate String m_servers;\n\n\t\t\tprivate String getCatServer() {\n\t\t\t\tif (m_servers == null) {\n\t\t\t\t\tDefaultMessageManager manager = (DefaultMessageManager) Cat.getManager();\n\t\t\t\t\tList\<Server\> servers = manager.getConfigManager().getServers();\n\n\t\t\t\t\tm_servers = Joiners.by(\',\').join(servers, new IBuilder\<Server\>() {\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic String asString(Server server) {\n\t\t\t\t\t\t\tString ip = server.getIp();\n\t\t\t\t\t\t\tInteger httpPort = server.getHttpPort();\n\n\t\t\t\t\t\t\treturn ip + \":\" + httpPort;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn m_servers;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tboolean isTraceMode = Cat.getManager().isTraceMode();\n\t\t\t\tHttpServletResponse res = ctx.getResponse();\n\n\t\t\t\tif (isTraceMode) {\n\t\t\t\t\tString id = Cat.getCurrentMessageId();\n\n\t\t\t\t\tres.setHeader(\"X-CAT-ROOT-ID\", id);\n\t\t\t\t\tres.setHeader(\"X-CAT-SERVER\", getCatServer());\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\t\t},\n\n\t\tLOG_CLIENT_PAYLOAD {\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tString type = ctx.getType();\n\n\t\t\t\tif (ctx.isTop()) {\n\t\t\t\t\tlogRequestClientInfo(req, type);\n\t\t\t\t\tlogRequestPayload(req, type);\n\t\t\t\t} else {\n\t\t\t\t\tlogRequestPayload(req, type);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\n\t\t\tprotected void logRequestClientInfo(HttpServletRequest req, String type) {\n\t\t\t\tStringBuilder sb = new StringBuilder(1024);\n\t\t\t\tString ip = \"\";\n\t\t\t\tString ipForwarded = req.getHeader(\"x-forwarded-for\");\n\n\t\t\t\tif (ipForwarded == null) {\n\t\t\t\t\tip = req.getRemoteAddr();\n\t\t\t\t} else {\n\t\t\t\t\tip = ipForwarded;\n\t\t\t\t}\n\n\t\t\t\tsb.append(\"IPS=\").append(ip);\n\t\t\t\tsb.append(\"&VirtualIP=\").append(req.getRemoteAddr());\n\t\t\t\tsb.append(\"&Server=\").append(req.getServerName());\n\t\t\t\tsb.append(\"&Referer=\").append(req.getHeader(\"referer\"));\n\t\t\t\tsb.append(\"&Agent=\").append(req.getHeader(\"user-agent\"));\n\n\t\t\t\tCat.logEvent(type, type + \".Server\", Message.SUCCESS, sb.toString());\n\t\t\t}\n\n\t\t\tprotected void logRequestPayload(HttpServletRequest req, String type) {\n\t\t\t\tStringBuilder sb = new StringBuilder(256);\n\n\t\t\t\tsb.append(req.getScheme().toUpperCase()).append(\'/\');\n\t\t\t\tsb.append(req.getMethod()).append(\' \').append(req.getRequestURI());\n\n\t\t\t\tString qs = req.getQueryString();\n\n\t\t\t\tif (qs != null) {\n\t\t\t\t\tsb.append(\'?\').append(qs);\n\t\t\t\t}\n\n\t\t\t\tCat.logEvent(type, type + \".Method\", Message.SUCCESS, sb.toString());\n\t\t\t}\n\t\t},\n\n\t\tLOG_SPAN {\n\n\t\t\tpublic static final char SPLIT = \'/\';\n\n\t\t\tprivate void customizeStatus(Transaction t, HttpServletRequest req) {\n\t\t\t\tObject catStatus = req.getAttribute(CatConstants.CAT_STATE);\n\n\t\t\t\tif (catStatus != null) {\n\t\t\t\t\tt.setStatus(catStatus.toString());\n\t\t\t\t} else {\n\t\t\t\t\tt.setStatus(Message.SUCCESS);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate void customizeUri(Transaction t, HttpServletRequest req) {\n\t\t\t\tif (t instanceof DefaultTransaction) {\n\t\t\t\t\tObject catPageType = req.getAttribute(CatConstants.CAT_PAGE_TYPE);\n\n\t\t\t\t\tif (catPageType instanceof String) {\n\t\t\t\t\t\t((DefaultTransaction) t).setType(catPageType.toString());\n\t\t\t\t\t}\n\n\t\t\t\t\tObject catPageUri = req.getAttribute(CatConstants.CAT_PAGE_URI);\n\n\t\t\t\t\tif (catPageUri instanceof String) {\n\t\t\t\t\t\t((DefaultTransaction) t).setName(catPageUri.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate String getRequestURI(HttpServletRequest req) {\n\t\t\t\tString url = req.getRequestURI();\n\t\t\t\tint length = url.length();\n\t\t\t\tStringBuilder sb = new StringBuilder(length);\n\n\t\t\t\tfor (int index = 0; index \< length;) {\n\t\t\t\t\tchar c = url.charAt(index);\n\n\t\t\t\t\tif (c == SPLIT && index \< length - 1) {\n\t\t\t\t\t\tsb.append(c);\n\n\t\t\t\t\t\tStringBuilder nextSection = new StringBuilder();\n\t\t\t\t\t\tboolean isNumber = false;\n\t\t\t\t\t\tboolean first = true;\n\n\t\t\t\t\t\tfor (int j = index + 1; j \< length; j++) {\n\t\t\t\t\t\t\tchar next = url.charAt(j);\n\n\t\t\t\t\t\t\tif ((first || isNumber == true) && next != SPLIT) {\n\t\t\t\t\t\t\t\tisNumber = isNumber(next);\n\t\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (next == SPLIT) {\n\t\t\t\t\t\t\t\tif (isNumber) {\n\t\t\t\t\t\t\t\t\tsb.append(\"{num}\");\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsb.append(nextSection.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tindex = j;\n\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else if (j == length - 1) {\n\t\t\t\t\t\t\t\tif (isNumber) {\n\t\t\t\t\t\t\t\t\tsb.append(\"{num}\");\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnextSection.append(next);\n\t\t\t\t\t\t\t\t\tsb.append(nextSection.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tindex = j + 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnextSection.append(next);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsb.append(c);\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn sb.toString();\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tTransaction t = Cat.newTransaction(ctx.getType(), getRequestURI(req));\n\n\t\t\t\ttry {\n\t\t\t\t\tctx.handle();\n\t\t\t\t\tcustomizeStatus(t, req);\n\t\t\t\t} catch (ServletException e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t} catch (Throwable e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow new RuntimeException(e);\n\t\t\t\t} finally {\n\t\t\t\t\tcustomizeUri(t, req);\n\t\t\t\t\tt.complete();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate boolean isNumber(char c) {\n\t\t\t\treturn (c \>= \'0\' && c \<= \'9\') || c == \'.\' || c == \'-\' || c == \',\';\n\t\t\t}\n\t\t};\n\t}\n\n\t")
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/system/page/login/LoginAction.java|
Ambiguity(|unknown:///|,"ElementValueList?","")
  742 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/problem/service/HistoricalProblemService.java|
Ambiguity(|unknown:///|,"BlockStatement+","long date = request.getStartTime();\n\t\tProblemReport report = getReportFromDatabase(date, domain);\n\t\t;")
  1115 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-client/src/main/java/com/dianping/cat/support/servlet/CatFilter.java|
Ambiguity(|unknown:///|(3048,4272,<91,51>,<257,1>),"EnumBody","{\n\t\tENVIRONMENT {\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tboolean top = !TraceContextHelper.threadLocal().hasPeekTransaction();\n\n\t\t\t\tctx.setTop(top);\n\n\t\t\t\tif (top) {\n\t\t\t\t\tctx.setType(CatClientConstants.TYPE_URL);\n\t\t\t\t} else {\n\t\t\t\t\tctx.setType(CatClientConstants.TYPE_URL_FORWARD);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\t\t},\n\n\t\tID_SETUP {\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tString id = req.getHeader(\"x-cat-id\");\n\t\t\t\tString parentId = req.getHeader(\"x-cat-parent-id\");\n\t\t\t\tString rootId = req.getHeader(\"x-cat-root-id\");\n\n\t\t\t\tif (id != null) {\n\t\t\t\t\tMessageTree tree = TraceContextHelper.threadLocal().getMessageTree();\n\n\t\t\t\t\ttree.setMessageId(id);\n\t\t\t\t\ttree.setParentMessageId(parentId);\n\t\t\t\t\ttree.setRootMessageId(rootId);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\t\t},\n\n\t\tLOG_CLIENT_PAYLOAD {\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tString type = ctx.getType();\n\n\t\t\t\tif (ctx.isTop()) {\n\t\t\t\t\tlogRequestClientInfo(req, type);\n\t\t\t\t\tlogRequestPayload(req, type);\n\t\t\t\t} else {\n\t\t\t\t\tlogRequestPayload(req, type);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\n\t\t\tprotected void logRequestClientInfo(HttpServletRequest req, String type) {\n\t\t\t\tStringBuilder sb = new StringBuilder(1024);\n\t\t\t\tString ip = \"\";\n\t\t\t\tString ipForwarded = req.getHeader(\"x-forwarded-for\");\n\n\t\t\t\tif (ipForwarded == null) {\n\t\t\t\t\tip = req.getRemoteAddr();\n\t\t\t\t} else {\n\t\t\t\t\tip = ipForwarded;\n\t\t\t\t}\n\n\t\t\t\tsb.append(\"IPS=\").append(ip);\n\t\t\t\tsb.append(\"&VirtualIP=\").append(req.getRemoteAddr());\n\t\t\t\tsb.append(\"&Server=\").append(req.getServerName());\n\t\t\t\tsb.append(\"&Referer=\").append(req.getHeader(\"referer\"));\n\t\t\t\tsb.append(\"&Agent=\").append(req.getHeader(\"user-agent\"));\n\n\t\t\t\tCat.logEvent(type, type + \".Server\", Message.SUCCESS, sb.toString());\n\t\t\t}\n\n\t\t\tprotected void logRequestPayload(HttpServletRequest req, String type) {\n\t\t\t\tStringBuilder sb = new StringBuilder(256);\n\n\t\t\t\tsb.append(req.getScheme().toUpperCase()).append(\'/\');\n\t\t\t\tsb.append(req.getMethod()).append(\' \').append(req.getRequestURI());\n\n\t\t\t\tString qs = req.getQueryString();\n\n\t\t\t\tif (qs != null) {\n\t\t\t\t\tsb.append(\'?\').append(qs);\n\t\t\t\t}\n\n\t\t\t\tCat.logEvent(type, type + \".Method\", Message.SUCCESS, sb.toString());\n\t\t\t}\n\t\t},\n\n\t\tLOG_SPAN {\n\t\t\tprivate void customizeStatus(Transaction t, HttpServletRequest req) {\n\t\t\t\tObject catStatus = req.getAttribute(CatClientConstants.CAT_STATE);\n\n\t\t\t\tif (catStatus != null) {\n\t\t\t\t\tt.setStatus(catStatus.toString());\n\t\t\t\t} else {\n\t\t\t\t\tt.setStatus(Message.SUCCESS);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate void customizeUri(Transaction t, HttpServletRequest req) {\n\t\t\t\tif (t instanceof DefaultTransaction) {\n\t\t\t\t\tObject catPageType = req.getAttribute(CatClientConstants.CAT_PAGE_TYPE);\n\n\t\t\t\t\tif (catPageType instanceof String) {\n\t\t\t\t\t\t((DefaultTransaction) t).setType(catPageType.toString());\n\t\t\t\t\t}\n\n\t\t\t\t\tObject catPageUri = req.getAttribute(CatClientConstants.CAT_PAGE_URI);\n\n\t\t\t\t\tif (catPageUri instanceof String) {\n\t\t\t\t\t\t((DefaultTransaction) t).setName(catPageUri.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate String getRequestURI(HttpServletRequest req) {\n\t\t\t\tString requestURI = req.getRequestURI();\n\n\t\t\t\tif (s_patterns.size() == 0) {\n\t\t\t\t\treturn requestURI;\n\t\t\t\t} else {\n\t\t\t\t\tfor (Entry\<MessageFormat, String\> entry : s_patterns.entrySet()) {\n\t\t\t\t\t\tMessageFormat format = entry.getKey();\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tformat.parse(requestURI);\n\n\t\t\t\t\t\t\treturn entry.getValue();\n\t\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn requestURI;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tTransaction t = Cat.newTransaction(ctx.getType(), getRequestURI(req));\n\n\t\t\t\ttry {\n\t\t\t\t\tctx.handle();\n\t\t\t\t\tcustomizeStatus(t, req);\n\t\t\t\t} catch (ServletException e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t} catch (Throwable e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow new RuntimeException(e);\n\t\t\t\t} finally {\n\t\t\t\t\tcustomizeUri(t, req);\n\t\t\t\t\tt.complete();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t")
4
[Project Analyzer] project: cat
Processing cat...

|file:///home/dataset/cat/cat-core/src/main/java/com/dianping/cat/helper/MetricType.java|
Ambiguity(|unknown:///|(0,1695,<1,0>,<63,0>),"CompilationUnit","/*\n * Copyright (c) 2011-2018, Meituan Dianping. All Rights Reserved.\n *\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License. You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage com.dianping.cat.helper;\n\npublic enum MetricType {\n\tCOUNT(\"COUNT\", \"(次数)\"),\n\n\tAVG(\"AVG\", \"(平均)\"),\n\n\tSUM(\"SUM\", \"(总和)\");\n\n\tprivate String m_name;\n\n\tprivate String m_desc;\n\n\tMetricType(String name, String desc) {\n\t\tm_name = name;\n\t\tm_desc = desc;\n\t}\n\n\tpublic static MetricType getTypeByName(String name) {\n\t\tfor (MetricType type : MetricType.values()) {\n\t\t\tif (type.getName().equals(name)) {\n\t\t\t\treturn type;\n\t\t\t}\n\t\t}\n\t\tthrow new RuntimeException(\"Unsupported MetricType Name!\");\n\t}\n\n\tpublic static String getDesByName(String name) {\n\t\tfor (MetricType type : MetricType.values()) {\n\t\t\tif (type.getName().equals(name)) {\n\t\t\t\treturn type.getDesc();\n\t\t\t}\n\t\t}\n\t\tthrow new RuntimeException(\"Unsupported MetricType Name!\");\n\t}\n\n\tpublic String getName() {\n\t\treturn m_name;\n\t}\n\n\tpublic String getDesc() {\n\t\treturn m_desc;\n\t}\n};\n")
  28 of 1359 processed succesfully!
  30 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-core/src/main/java/com/dianping/cat/task/TimerSyncTask.java|
EmptySet()
  49 of 1359 processed succesfully!
  51 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-core/src/main/java/com/dianping/cat/config/ReportReloadConfigManager.java|
EmptySet()
|file:///home/dataset/cat/cat-core/src/main/java/com/dianping/cat/config/server/ServerConfigManager.java|
EmptySet()
|file:///home/dataset/cat/cat-core/src/main/java/com/dianping/cat/config/business/BusinessConfigManager.java|
EmptySet()
  74 of 1359 processed succesfully!
  79 of 1359 processed succesfully!
  101 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-core/src/main/java/com/dianping/cat/report/DefaultReportBucketManager.java|
EmptySet()
|file:///home/dataset/cat/cat-core/src/main/java/com/dianping/cat/report/service/BaseCompositeModelService.java|
EmptySet()
  119 of 1359 processed succesfully!
  124 of 1359 processed succesfully!
  126 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-alarm/src/main/java/com/dianping/cat/alarm/spi/AlertManager.java|
EmptySet()
  133 of 1359 processed succesfully!
  155 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-consumer/src/main/java/com/dianping/cat/consumer/DatabaseParser.java|
EmptySet()
|file:///home/dataset/cat/cat-consumer/src/main/java/com/dianping/cat/consumer/problem/ProblemReportFilter.java|
EmptySet()
  230 of 1359 processed succesfully!
  232 of 1359 processed succesfully!
  237 of 1359 processed succesfully!
  242 of 1359 processed succesfully!
  247 of 1359 processed succesfully!
  248 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-consumer/src/main/java/com/dianping/cat/consumer/storage/StorageAnalyzer.java|
EmptySet()
|file:///home/dataset/cat/cat-consumer/src/main/java/com/dianping/cat/consumer/event/EventAnalyzer.java|
EmptySet()
|file:///home/dataset/cat/cat-consumer/src/main/java/com/dianping/cat/consumer/event/EventReportCountFilter.java|
EmptySet()
  263 of 1359 processed succesfully!
  267 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionAnalyzer.java|
EmptySet()
|file:///home/dataset/cat/cat-consumer/src/main/java/com/dianping/cat/consumer/transaction/TransactionReportCountFilter.java|
EmptySet()
|file:///home/dataset/cat/cat-consumer/src/main/java/com/dianping/cat/consumer/dump/LocalMessageBucketManager.java|
EmptySet()
|file:///home/dataset/cat/integration/mybatis/CatMybatisPlugin.java|
EmptySet()
|file:///home/dataset/cat/integration/URL/CatFilter.java|
Ambiguity(|unknown:///|(1690,5865,<55,51>,<292,1>),"EnumBody","{\n\t\tENVIRONMENT {\n\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tboolean top = !Cat.getManager().hasContext();\n\n\t\t\t\tctx.setTop(top);\n\n\t\t\t\tif (top) {\n\t\t\t\t\tctx.setType(CatConstants.TYPE_URL);\n\n\t\t\t\t\tsetTraceMode(req);\n\t\t\t\t} else {\n\t\t\t\t\tctx.setType(CatConstants.TYPE_URL_FORWARD);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\n\t\t\tprotected void setTraceMode(HttpServletRequest req) {\n\t\t\t\tString traceMode = \"X-CAT-TRACE-MODE\";\n\t\t\t\tString headMode = req.getHeader(traceMode);\n\n\t\t\t\tif (\"true\".equals(headMode)) {\n\t\t\t\t\tCat.getManager().setTraceMode(true);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tID_SETUP {\n\t\t\tprivate String m_servers;\n\n\t\t\tprivate String getCatServer() {\n\t\t\t\tif (m_servers == null) {\n\t\t\t\t\tDefaultMessageManager manager = (DefaultMessageManager) Cat.getManager();\n\t\t\t\t\tList\<Server\> servers = manager.getConfigManager().getServers();\n\n\t\t\t\t\tm_servers = Joiners.by(\',\').join(servers, new IBuilder\<Server\>() {\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic String asString(Server server) {\n\t\t\t\t\t\t\tString ip = server.getIp();\n\t\t\t\t\t\t\tInteger httpPort = server.getHttpPort();\n\n\t\t\t\t\t\t\treturn ip + \":\" + httpPort;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn m_servers;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tboolean isTraceMode = Cat.getManager().isTraceMode();\n\t\t\t\tHttpServletResponse res = ctx.getResponse();\n\n\t\t\t\tif (isTraceMode) {\n\t\t\t\t\tString id = Cat.getCurrentMessageId();\n\n\t\t\t\t\tres.setHeader(\"X-CAT-ROOT-ID\", id);\n\t\t\t\t\tres.setHeader(\"X-CAT-SERVER\", getCatServer());\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\t\t},\n\n\t\tLOG_CLIENT_PAYLOAD {\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tString type = ctx.getType();\n\n\t\t\t\tif (ctx.isTop()) {\n\t\t\t\t\tlogRequestClientInfo(req, type);\n\t\t\t\t\tlogRequestPayload(req, type);\n\t\t\t\t} else {\n\t\t\t\t\tlogRequestPayload(req, type);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\n\t\t\tprotected void logRequestClientInfo(HttpServletRequest req, String type) {\n\t\t\t\tStringBuilder sb = new StringBuilder(1024);\n\t\t\t\tString ip = \"\";\n\t\t\t\tString ipForwarded = req.getHeader(\"x-forwarded-for\");\n\n\t\t\t\tif (ipForwarded == null) {\n\t\t\t\t\tip = req.getRemoteAddr();\n\t\t\t\t} else {\n\t\t\t\t\tip = ipForwarded;\n\t\t\t\t}\n\n\t\t\t\tsb.append(\"IPS=\").append(ip);\n\t\t\t\tsb.append(\"&VirtualIP=\").append(req.getRemoteAddr());\n\t\t\t\tsb.append(\"&Server=\").append(req.getServerName());\n\t\t\t\tsb.append(\"&Referer=\").append(req.getHeader(\"referer\"));\n\t\t\t\tsb.append(\"&Agent=\").append(req.getHeader(\"user-agent\"));\n\n\t\t\t\tCat.logEvent(type, type + \".Server\", Message.SUCCESS, sb.toString());\n\t\t\t}\n\n\t\t\tprotected void logRequestPayload(HttpServletRequest req, String type) {\n\t\t\t\tStringBuilder sb = new StringBuilder(256);\n\n\t\t\t\tsb.append(req.getScheme().toUpperCase()).append(\'/\');\n\t\t\t\tsb.append(req.getMethod()).append(\' \').append(req.getRequestURI());\n\n\t\t\t\tString qs = req.getQueryString();\n\n\t\t\t\tif (qs != null) {\n\t\t\t\t\tsb.append(\'?\').append(qs);\n\t\t\t\t}\n\n\t\t\t\tCat.logEvent(type, type + \".Method\", Message.SUCCESS, sb.toString());\n\t\t\t}\n\t\t},\n\n\t\tLOG_SPAN {\n\n\t\t\tpublic static final char SPLIT = \'/\';\n\n\t\t\tprivate void customizeStatus(Transaction t, HttpServletRequest req) {\n\t\t\t\tObject catStatus = req.getAttribute(CatConstants.CAT_STATE);\n\n\t\t\t\tif (catStatus != null) {\n\t\t\t\t\tt.setStatus(catStatus.toString());\n\t\t\t\t} else {\n\t\t\t\t\tt.setStatus(Message.SUCCESS);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate void customizeUri(Transaction t, HttpServletRequest req) {\n\t\t\t\tif (t instanceof DefaultTransaction) {\n\t\t\t\t\tObject catPageType = req.getAttribute(CatConstants.CAT_PAGE_TYPE);\n\n\t\t\t\t\tif (catPageType instanceof String) {\n\t\t\t\t\t\t((DefaultTransaction) t).setType(catPageType.toString());\n\t\t\t\t\t}\n\n\t\t\t\t\tObject catPageUri = req.getAttribute(CatConstants.CAT_PAGE_URI);\n\n\t\t\t\t\tif (catPageUri instanceof String) {\n\t\t\t\t\t\t((DefaultTransaction) t).setName(catPageUri.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate String getRequestURI(HttpServletRequest req) {\n\t\t\t\tString url = req.getRequestURI();\n\t\t\t\tint length = url.length();\n\t\t\t\tStringBuilder sb = new StringBuilder(length);\n\n\t\t\t\tfor (int index = 0; index \< length;) {\n\t\t\t\t\tchar c = url.charAt(index);\n\n\t\t\t\t\tif (c == SPLIT && index \< length - 1) {\n\t\t\t\t\t\tsb.append(c);\n\n\t\t\t\t\t\tStringBuilder nextSection = new StringBuilder();\n\t\t\t\t\t\tboolean isNumber = false;\n\t\t\t\t\t\tboolean first = true;\n\n\t\t\t\t\t\tfor (int j = index + 1; j \< length; j++) {\n\t\t\t\t\t\t\tchar next = url.charAt(j);\n\n\t\t\t\t\t\t\tif ((first || isNumber == true) && next != SPLIT) {\n\t\t\t\t\t\t\t\tisNumber = isNumber(next);\n\t\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (next == SPLIT) {\n\t\t\t\t\t\t\t\tif (isNumber) {\n\t\t\t\t\t\t\t\t\tsb.append(\"{num}\");\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsb.append(nextSection.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tindex = j;\n\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else if (j == length - 1) {\n\t\t\t\t\t\t\t\tif (isNumber) {\n\t\t\t\t\t\t\t\t\tsb.append(\"{num}\");\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnextSection.append(next);\n\t\t\t\t\t\t\t\t\tsb.append(nextSection.toString());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tindex = j + 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnextSection.append(next);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsb.append(c);\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn sb.toString();\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tTransaction t = Cat.newTransaction(ctx.getType(), getRequestURI(req));\n\n\t\t\t\ttry {\n\t\t\t\t\tctx.handle();\n\t\t\t\t\tcustomizeStatus(t, req);\n\t\t\t\t} catch (ServletException e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t} catch (Throwable e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow new RuntimeException(e);\n\t\t\t\t} finally {\n\t\t\t\t\tcustomizeUri(t, req);\n\t\t\t\t\tt.complete();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate boolean isNumber(char c) {\n\t\t\t\treturn (c \>= \'0\' && c \<= \'9\') || c == \'.\' || c == \'-\' || c == \',\';\n\t\t\t}\n\t\t};\n\t}\n\n\t")
|file:///home/dataset/cat/cat-hadoop/src/main/java/com/dianping/cat/hadoop/hdfs/HarConnectionPool.java|
EmptySet()
  355 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-hadoop/src/main/java/org/unidal/cat/message/storage/clean/LogviewProcessor.java|
EmptySet()
  386 of 1359 processed succesfully!
  389 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-hadoop/src/main/java/org/unidal/cat/message/storage/local/LocalBucketManager.java|
EmptySet()
  394 of 1359 processed succesfully!
  398 of 1359 processed succesfully!
|file:///home/dataset/cat/lib/java/src/main/java/com/dianping/cat/Cat.java|
EmptySet()
|file:///home/dataset/cat/lib/java/src/main/java/com/dianping/cat/util/Threads.java|
EmptySet()
|file:///home/dataset/cat/lib/java/src/main/java/com/dianping/cat/status/StatusUpdateTask.java|
EmptySet()
  428 of 1359 processed succesfully!
|file:///home/dataset/cat/lib/java/src/main/java/com/dianping/cat/status/jvm/ThreadInfoCollector.java|
EmptySet()
|file:///home/dataset/cat/lib/java/src/main/java/com/dianping/cat/status/datasource/druid/DruidInfoCollector.java|
EmptySet()
|file:///home/dataset/cat/lib/java/src/main/java/com/dianping/cat/status/datasource/c3p0/C3P0InfoCollector.java|
EmptySet()
  459 of 1359 processed succesfully!
|file:///home/dataset/cat/lib/java/src/main/java/com/dianping/cat/configuration/NetworkInterfaceManager.java|
EmptySet()
|file:///home/dataset/cat/lib/java/src/main/java/com/dianping/cat/configuration/DefaultClientConfigService.java|
EmptySet()
|file:///home/dataset/cat/lib/java/src/main/java/com/dianping/cat/configuration/ApplicationEnvironment.java|
EmptySet()
  480 of 1359 processed succesfully!
  496 of 1359 processed succesfully!
|file:///home/dataset/cat/lib/java/src/main/java/com/dianping/cat/message/io/ChannelManager.java|
EmptySet()
  516 of 1359 processed succesfully!
  524 of 1359 processed succesfully!
  529 of 1359 processed succesfully!
  530 of 1359 processed succesfully!
|file:///home/dataset/cat/lib/java/src/main/java/com/dianping/cat/message/internal/DefaultMessageManager.java|
EmptySet()
|file:///home/dataset/cat/lib/java/src/main/java/com/dianping/cat/analyzer/LocalAggregator.java|
EmptySet()
  572 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/test/java/com/dianping/cat/report/page/problem/ProblemReportMergerTest.java|
EmptySet()
  606 of 1359 processed succesfully!
  612 of 1359 processed succesfully!
  621 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/system/page/plugin/Handler.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/system/page/login/LoginAction.java|
Ambiguity(|unknown:///|,"ElementValueList?","")
  691 of 1359 processed succesfully!
  695 of 1359 processed succesfully!
  700 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/system/page/router/config/RouterConfigHandler.java|
EmptySet()
  709 of 1359 processed succesfully!
  730 of 1359 processed succesfully!
  741 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/task/cmdb/ProjectUpdateTask.java|
EmptySet()
  759 of 1359 processed succesfully!
  761 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/task/reload/impl/BusinessReportReloader.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/task/reload/impl/TransactionReportReloader.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/task/reload/impl/StateReportReloader.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/task/reload/impl/ProblemReportReloader.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/task/reload/impl/EventReportReloader.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/task/reload/impl/CrossReportReloader.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/task/reload/impl/TopReportReloader.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/task/reload/impl/MatrixReportReloader.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/task/reload/impl/DependencyReportReloader.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/task/reload/impl/HeartbeatReportReloader.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/task/reload/impl/StorageReportReloader.java|
EmptySet()
  762 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/task/current/CurrentWeeklyMonthlyReportTask.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/dependency/Handler.java|
EmptySet()
  772 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/dependency/TopMetric.java|
EmptySet()
  774 of 1359 processed succesfully!
  779 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/dependency/graph/TopologyGraphManager.java|
EmptySet()
  780 of 1359 processed succesfully!
  781 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/dependency/service/DependencyReportService.java|
EmptySet()
  784 of 1359 processed succesfully!
  786 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/problem/ThreadLevelInfo.java|
EmptySet()
  796 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/problem/service/ProblemReportService.java|
EmptySet()
  808 of 1359 processed succesfully!
  809 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/problem/service/HistoricalProblemService.java|
Ambiguity(|unknown:///|,"BlockStatement+","long date = request.getStartTime();\n\t\tProblemReport report = getReportFromDatabase(date, domain);\n\t\t;")
  814 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/overload/task/DailyCapacityUpdater.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/overload/task/MonthlyCapacityUpdater.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/overload/task/HourlyCapacityUpdater.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/overload/task/WeeklyCapacityUpdater.java|
EmptySet()
  847 of 1359 processed succesfully!
  849 of 1359 processed succesfully!
  850 of 1359 processed succesfully!
  853 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/state/service/StateReportService.java|
EmptySet()
  855 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/statistics/task/utilization/UtilizationReportBuilder.java|
EmptySet()
  866 of 1359 processed succesfully!
  867 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/statistics/task/service/ServiceReportBuilder.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/statistics/task/service/ClientReportBuilder.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/statistics/service/HeavyReportService.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/statistics/service/ServiceReportService.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/statistics/service/UtilizationReportService.java|
EmptySet()
  885 of 1359 processed succesfully!
  888 of 1359 processed succesfully!
  891 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/heartbeat/service/HeartbeatReportService.java|
EmptySet()
  892 of 1359 processed succesfully!
  895 of 1359 processed succesfully!
  897 of 1359 processed succesfully!
  923 of 1359 processed succesfully!
  930 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/top/TopMetric.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/top/service/TopReportService.java|
EmptySet()
  932 of 1359 processed succesfully!
  934 of 1359 processed succesfully!
  953 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/cross/service/CrossReportService.java|
EmptySet()
  955 of 1359 processed succesfully!
  958 of 1359 processed succesfully!
  965 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/storage/display/StorageAlertInfoBuilder.java|
EmptySet()
  972 of 1359 processed succesfully!
  974 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/storage/task/StorageReportService.java|
EmptySet()
  977 of 1359 processed succesfully!
  978 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/storage/transform/HourlyLineChartVisitor.java|
EmptySet()
  986 of 1359 processed succesfully!
  987 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/event/service/EventReportService.java|
EmptySet()
  999 of 1359 processed succesfully!
  1002 of 1359 processed succesfully!
  1020 of 1359 processed succesfully!
  1021 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/matrix/service/MatrixReportService.java|
EmptySet()
  1023 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/business/graph/CustomDataCalculator.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/business/graph/BusinessGraphCreator.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/business/task/BusinessBaselineReportBuilder.java|
EmptySet()
  1043 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/business/service/BusinessReportService.java|
EmptySet()
  1047 of 1359 processed succesfully!
  1049 of 1359 processed succesfully!
  1050 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/page/transaction/service/TransactionReportService.java|
EmptySet()
  1064 of 1359 processed succesfully!
  1066 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/alert/heartbeat/HeartbeatAlert.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/alert/heartbeat/HeartbeatRuleConfigManager.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/alert/exception/ExceptionAlert.java|
EmptySet()
  1080 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/alert/spi/config/BaseRuleConfigManager.java|
EmptySet()
  1086 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/alert/summary/build/AlertInfoBuilder.java|
EmptySet()
  1090 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/alert/business/BusinessAlert.java|
EmptySet()
|file:///home/dataset/cat/cat-home/src/main/java/com/dianping/cat/report/alert/business/BusinessRuleConfigManager.java|
EmptySet()
  1099 of 1359 processed succesfully!
  1113 of 1359 processed succesfully!
  1116 of 1359 processed succesfully!
  1121 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-client/src/main/java/com/dianping/cat/CatBootstrap.java|
EmptySet()
  1135 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-client/src/main/java/com/dianping/cat/support/servlet/CatFilter.java|
Ambiguity(|unknown:///|(3048,4272,<91,51>,<257,1>),"EnumBody","{\n\t\tENVIRONMENT {\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tboolean top = !TraceContextHelper.threadLocal().hasPeekTransaction();\n\n\t\t\t\tctx.setTop(top);\n\n\t\t\t\tif (top) {\n\t\t\t\t\tctx.setType(CatClientConstants.TYPE_URL);\n\t\t\t\t} else {\n\t\t\t\t\tctx.setType(CatClientConstants.TYPE_URL_FORWARD);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\t\t},\n\n\t\tID_SETUP {\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tString id = req.getHeader(\"x-cat-id\");\n\t\t\t\tString parentId = req.getHeader(\"x-cat-parent-id\");\n\t\t\t\tString rootId = req.getHeader(\"x-cat-root-id\");\n\n\t\t\t\tif (id != null) {\n\t\t\t\t\tMessageTree tree = TraceContextHelper.threadLocal().getMessageTree();\n\n\t\t\t\t\ttree.setMessageId(id);\n\t\t\t\t\ttree.setParentMessageId(parentId);\n\t\t\t\t\ttree.setRootMessageId(rootId);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\t\t},\n\n\t\tLOG_CLIENT_PAYLOAD {\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tString type = ctx.getType();\n\n\t\t\t\tif (ctx.isTop()) {\n\t\t\t\t\tlogRequestClientInfo(req, type);\n\t\t\t\t\tlogRequestPayload(req, type);\n\t\t\t\t} else {\n\t\t\t\t\tlogRequestPayload(req, type);\n\t\t\t\t}\n\n\t\t\t\tctx.handle();\n\t\t\t}\n\n\t\t\tprotected void logRequestClientInfo(HttpServletRequest req, String type) {\n\t\t\t\tStringBuilder sb = new StringBuilder(1024);\n\t\t\t\tString ip = \"\";\n\t\t\t\tString ipForwarded = req.getHeader(\"x-forwarded-for\");\n\n\t\t\t\tif (ipForwarded == null) {\n\t\t\t\t\tip = req.getRemoteAddr();\n\t\t\t\t} else {\n\t\t\t\t\tip = ipForwarded;\n\t\t\t\t}\n\n\t\t\t\tsb.append(\"IPS=\").append(ip);\n\t\t\t\tsb.append(\"&VirtualIP=\").append(req.getRemoteAddr());\n\t\t\t\tsb.append(\"&Server=\").append(req.getServerName());\n\t\t\t\tsb.append(\"&Referer=\").append(req.getHeader(\"referer\"));\n\t\t\t\tsb.append(\"&Agent=\").append(req.getHeader(\"user-agent\"));\n\n\t\t\t\tCat.logEvent(type, type + \".Server\", Message.SUCCESS, sb.toString());\n\t\t\t}\n\n\t\t\tprotected void logRequestPayload(HttpServletRequest req, String type) {\n\t\t\t\tStringBuilder sb = new StringBuilder(256);\n\n\t\t\t\tsb.append(req.getScheme().toUpperCase()).append(\'/\');\n\t\t\t\tsb.append(req.getMethod()).append(\' \').append(req.getRequestURI());\n\n\t\t\t\tString qs = req.getQueryString();\n\n\t\t\t\tif (qs != null) {\n\t\t\t\t\tsb.append(\'?\').append(qs);\n\t\t\t\t}\n\n\t\t\t\tCat.logEvent(type, type + \".Method\", Message.SUCCESS, sb.toString());\n\t\t\t}\n\t\t},\n\n\t\tLOG_SPAN {\n\t\t\tprivate void customizeStatus(Transaction t, HttpServletRequest req) {\n\t\t\t\tObject catStatus = req.getAttribute(CatClientConstants.CAT_STATE);\n\n\t\t\t\tif (catStatus != null) {\n\t\t\t\t\tt.setStatus(catStatus.toString());\n\t\t\t\t} else {\n\t\t\t\t\tt.setStatus(Message.SUCCESS);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate void customizeUri(Transaction t, HttpServletRequest req) {\n\t\t\t\tif (t instanceof DefaultTransaction) {\n\t\t\t\t\tObject catPageType = req.getAttribute(CatClientConstants.CAT_PAGE_TYPE);\n\n\t\t\t\t\tif (catPageType instanceof String) {\n\t\t\t\t\t\t((DefaultTransaction) t).setType(catPageType.toString());\n\t\t\t\t\t}\n\n\t\t\t\t\tObject catPageUri = req.getAttribute(CatClientConstants.CAT_PAGE_URI);\n\n\t\t\t\t\tif (catPageUri instanceof String) {\n\t\t\t\t\t\t((DefaultTransaction) t).setName(catPageUri.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate String getRequestURI(HttpServletRequest req) {\n\t\t\t\tString requestURI = req.getRequestURI();\n\n\t\t\t\tif (s_patterns.size() == 0) {\n\t\t\t\t\treturn requestURI;\n\t\t\t\t} else {\n\t\t\t\t\tfor (Entry\<MessageFormat, String\> entry : s_patterns.entrySet()) {\n\t\t\t\t\t\tMessageFormat format = entry.getKey();\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tformat.parse(requestURI);\n\n\t\t\t\t\t\t\treturn entry.getValue();\n\t\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn requestURI;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void handle(Context ctx) throws IOException, ServletException {\n\t\t\t\tHttpServletRequest req = ctx.getRequest();\n\t\t\t\tTransaction t = Cat.newTransaction(ctx.getType(), getRequestURI(req));\n\n\t\t\t\ttry {\n\t\t\t\t\tctx.handle();\n\t\t\t\t\tcustomizeStatus(t, req);\n\t\t\t\t} catch (ServletException e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow e;\n\t\t\t\t} catch (Throwable e) {\n\t\t\t\t\tt.setStatus(e);\n\t\t\t\t\tCat.logError(e);\n\t\t\t\t\tthrow new RuntimeException(e);\n\t\t\t\t} finally {\n\t\t\t\t\tcustomizeUri(t, req);\n\t\t\t\t\tt.complete();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t")
|file:///home/dataset/cat/cat-client/src/main/java/com/dianping/cat/status/StatusInfoCollector.java|
EmptySet()
  1163 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-client/src/main/java/com/dianping/cat/network/ClientTransportManager.java|
EmptySet()
|file:///home/dataset/cat/cat-client/src/main/java/com/dianping/cat/configuration/NetworkInterfaceManager.java|
EmptySet()
|file:///home/dataset/cat/cat-client/src/main/java/com/dianping/cat/configuration/DefaultConfigureManager.java|
EmptySet()
  1190 of 1359 processed succesfully!
  1209 of 1359 processed succesfully!
  1218 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-client/src/main/java/com/dianping/cat/message/io/MessageSizeControl.java|
EmptySet()
  1234 of 1359 processed succesfully!
  1237 of 1359 processed succesfully!
  1240 of 1359 processed succesfully!
  1241 of 1359 processed succesfully!
|file:///home/dataset/cat/cat-client/src/main/java/com/dianping/cat/component/DefaultComponentContext.java|
EmptySet()
111
INFO:root:  Formating the source code
INFO:root:   Done
